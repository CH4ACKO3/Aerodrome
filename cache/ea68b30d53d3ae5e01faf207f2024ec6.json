{"expires":1743604837.335,"value":{"highlighted":"<!-- Syntax highlighted by torchlight.dev --><div class='line'><span style=\"color:#1b1f234d; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\">1</span><span style=\"color: #24292e;\">def layer_init(layer, std=np.sqrt(2), bias_const=0.0):\\n    torch.nn.init.orthogonal_(layer.weight, std)\\n    torch.nn.init.constant_(layer.bias, bias_const)\\n    return layer\\n\\nclass Agent(nn.Module):\\n    def __init__(self):\\n        super().__init__()\\n        self.critic = nn.Sequential(\\n            layer_init(nn.Linear(3, 256)),\\n            nn.ReLU(),\\n            layer_init(nn.Linear(256, 256)),\\n            nn.ReLU(),\\n            layer_init(nn.Linear(256, 256)),\\n            nn.ReLU(),\\n            layer_init(nn.Linear(256, 1), std=1.0),\\n        )\\n        self.actor_mean = nn.Sequential(\\n            layer_init(nn.Linear(3, 128)),\\n            nn.ReLU(),\\n            layer_init(nn.Linear(128, 128)),\\n            nn.ReLU(),\\n            layer_init(nn.Linear(128, 128)),\\n            nn.ReLU(),\\n            layer_init(nn.Linear(128, 1), std=0.01),\\n            nn.Tanh(),\\n        )\\n        self.actor_logstd = nn.Parameter(torch.zeros(1, 1))\\n\\n    def get_value(self, x):\\n        return self.critic(x)\\n\\n    def get_action_and_value(self, x, action=None, evaluate=False):\\n        action_mean = self.actor_mean(x)\\n        action_logstd = self.actor_logstd.expand_as(action_mean)\\n        action_std = torch.exp(action_logstd)\\n        if evaluate:\\n            probs = Normal(action_mean, action_std*1e-6)\\n        else:\\n            probs = Normal(action_mean, action_std)\\n        if action is None:\\n            action = probs.sample()\\n        action = torch.clamp(action, -1.0, 1.0)\\n        return action, probs.log_prob(action).sum(1), probs.entropy().sum(1), self.critic(x)\\n\\n\\ndef linear_schedule(start_e, end_e, duration, t):\\n    return start_e + (end_e - start_e) * min(t / duration, 1)</span></div>","classes":"torchlight","styles":"background-color: #fff; --theme-selection-background: #e2e5e9;"}}
