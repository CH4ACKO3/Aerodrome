{"expires":1743605056.886,"value":{"highlighted":"<!-- Syntax highlighted by torchlight.dev --><div class='line'><span style=\"color:#2f86d2; text-align: right; -webkit-user-select: none; user-select: none;\" class=\"line-number\">1</span><span style=\"color: #002339;\">virtual Object3D d() override\\n{   \\n    auto derivative = *this;\\n\\n    derivative.V = (T * cos(alpha) * cos(beta) - D - m * g * sin(theta_v)) / m;\\n    derivative.theta_v = (T * (sin(alpha) * cos(gamma_v) - cos(alpha) * sin(beta) * sin(gamma_v))\\n                            + L * cos(gamma_v) - N * sin(gamma_v) - m * g * cos(theta_v)) / (m * V);\\n    derivative.phi_v = -(T * (sin(alpha) * sin(gamma_v) - cos(alpha) * sin(beta) * cos(gamma_v))\\n                        + L * sin(gamma_v) + N * cos(gamma_v)) / (m * V * cos(theta_v));\\n\\n    derivative.ang_vel[0] = (M[0] - (J[2] - J[1]) * ang_vel[1] * ang_vel[2]) / J[0];\\n    derivative.ang_vel[1] = (M[1] - (J[0] - J[2]) * ang_vel[2] * ang_vel[0]) / J[1];\\n    derivative.ang_vel[2] = (M[2] - (J[1] - J[0]) * ang_vel[0] * ang_vel[1]) / J[2];\\n\\n    derivative.theta = ang_vel[1] * sin(gamma) + ang_vel[2] * cos(gamma);\\n    derivative.phi = (ang_vel[1] * cos(gamma) - ang_vel[2] * sin(gamma)) / cos(theta);\\n    derivative.gamma = ang_vel[0] * - tan(theta) * (ang_vel[1] * cos(gamma) - ang_vel[2] * sin(gamma));\\n\\n    derivative.pos[0] = V * cos(theta_v) * cos(phi_v);\\n    derivative.pos[1] = V * sin(theta_v);\\n    derivative.pos[2] = -V * cos(theta_v) * sin(phi_v);\\n\\n    return derivative;\\n}</span></div>","classes":"torchlight","styles":"background-color: #FFFFFF; --theme-selection-background: #4373c2;"}}
